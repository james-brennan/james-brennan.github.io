<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on James Brennan</title>
    <link>https://james-brennan.github.io/tags/python/</link>
    <description>Recent content in python on James Brennan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 12 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://james-brennan.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Laplace approximation for approximate inference in python</title>
      <link>https://james-brennan.github.io/posts/laplace_approximation/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/laplace_approximation/</guid>
      <description>For any model more complex than some well studied examples, an exact description of the posterior is computationally intractable. Beyond an exhaustive evaluation, approximate inference makes it possible to retrieve reasonable descriptions of a posterior or cost surface based on approximation methods. While for many models, Markov chain Monte Carlo is the approximate inference method of choice, the Laplace approximation still provides the simplest deterministic method available.
Simply put the Laplace approximation entails finding a Gaussian approximation to a continuous probability density.</description>
    </item>
    
    <item>
      <title>Linking python with PostGIS</title>
      <link>https://james-brennan.github.io/posts/postgis_python/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/postgis_python/</guid>
      <description>GIS databases are sort of a necessary evil. Once your data gets too big for RAM you&amp;rsquo;ve got to start thinking either about relational databases or doing something fancy with dask. PostGIS is a spatial database extender for PostgreSQL object-relational database. In essence, PostGIS puts GIS functions into SQL queries allowing you to run queries and joins based on location. PostgreSQL is big nasty and powerful so this post provides a basic look at utilising PostGIS for the &amp;lsquo;GIS stuff&amp;rsquo; and linking python to a PostGIS database for pre-processing and visualisation.</description>
    </item>
    
    <item>
      <title>Estimating CDFs from data done right</title>
      <link>https://james-brennan.github.io/posts/edf/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/edf/</guid>
      <description>&lt;p&gt;This post looks at estimating empirical cumulative density functions (CDFs) and their confidence intervals from data.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Confidence intervals for LOWESS models in python</title>
      <link>https://james-brennan.github.io/posts/lowess_conf/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/lowess_conf/</guid>
      <description>&lt;p&gt;LOWESS (or also referred to as LOESS for &lt;em&gt;locally-weighted scatterplot smoothing&lt;/em&gt;) is a non-parametric regression method for smoothing data. But how do we get uncertainties on the curve?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fast and easy gridding of point data with geopandas</title>
      <link>https://james-brennan.github.io/posts/fast_gridding_geopandas/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/fast_gridding_geopandas/</guid>
      <description>This post looks at using the geopandas library to do fast efficient gridding of point data onto a regular grid. Geopandas is a python package that provides a geospatial extension to pandas &amp;ndash; so that dataframes can store geographic data such as points and polygons.
Data A simple csv of point data provides a useful starting point for this. dob.csv contains locations of wildfires detected by the NASA MODIS instruments for a year over North and South America.</description>
    </item>
    
    <item>
      <title>Visualising 2 billion pixel rasters with datashader and xarray</title>
      <link>https://james-brennan.github.io/posts/datashader_raster/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/datashader_raster/</guid>
      <description>&lt;p&gt;This post looks at visualising large raster datasets with &lt;a href=&#34;https://datashader.org&#34;&gt;Datashader&lt;/a&gt; and &lt;a href=&#34;http://xarray.pydata.org/en/stable/&#34;&gt;xarray&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Essential packages for geospatial analysis in python</title>
      <link>https://james-brennan.github.io/posts/pythongeo/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/pythongeo/</guid>
      <description>&lt;p&gt;Python is fast becoming the defacto standard for geospatial work &amp;ndash; primarily because of its great ecosystem of packages, but also probably whatever you want to do someone has posted an answer for it on &lt;a href=&#34;https://gis.stackexchange.com/questions/tagged/python&#34;&gt;stackoverflow&lt;/a&gt; with attached python code. To save you some of that trouble below is a collection of &amp;ldquo;essential&amp;rdquo;&amp;quot; packages for everything geospatial in python.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ASCII maps of vector files</title>
      <link>https://james-brennan.github.io/posts/ascii_1/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://james-brennan.github.io/posts/ascii_1/</guid>
      <description>&lt;h1 id=&#34;ʕᴥʔ&#34;&gt;ʕ•ᴥ•ʔ&lt;/h1&gt;
&lt;p&gt;I recently came across a nice python package for visualising vector data quickly. Of course, an obvious option is to fire up QGIS but often I generate these on a remote server so would like something a little more &amp;ldquo;text-based&amp;rdquo;&amp;hellip; Then this &lt;a href=&#34;https://medium.com/@vtcraghead/geoascii-93fe3764dfe1&#34;&gt;post&lt;/a&gt; highlighted some rather charming tools for generating ASCII rasterisations of vector geometries. I liked the look of the python-based &lt;a href=&#34;https://github.com/geowurster/gj2ascii&#34;&gt;&lt;code&gt;gj2ascii&lt;/code&gt;&lt;/a&gt; the most.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
